apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: jspolicies.policy.jspolicy.com
spec:
  group: policy.jspolicy.com
  names:
    kind: JsPolicy
    listKind: JsPolicyList
    plural: jspolicies
    singular: jspolicy
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: JsPolicy holds the webhook configuration
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              apiGroups:
                description: APIGroups is the API groups the resources belong to.
                  '*' is all groups. If '*' is present, the length of the slice must
                  be one.
                items:
                  type: string
                type: array
              apiVersions:
                description: APIVersions is the API versions the resources belong
                  to. '*' is all versions. If '*' is present, the length of the slice
                  must be one.
                items:
                  type: string
                type: array
              auditLogSize:
                description: AuditLogSize defines how many violations should be logged
                  in the status. Defaults to 10
                format: int32
                type: integer
              auditPolicy:
                description: AuditPolicy defines if violations should be logged to
                  the webhook status or not. By default, violations will be logged
                  to the CRD status.
                type: string
              dependencies:
                additionalProperties:
                  type: string
                description: Dependencies is a map of npm modules this webhook should
                  be bundled with
                type: object
              failurePolicy:
                description: FailurePolicy defines how unrecognized errors from the
                  admission endpoint are handled - allowed values are Ignore or Fail.
                  Defaults to Fail.
                type: string
              javascript:
                description: JavaScript is the payload of the webhook that will be
                  executed. If this is not defined, jsPolicy expects the user to create
                  a JsPolicyBundle for this policy.
                type: string
              matchPolicy:
                description: "matchPolicy defines how the \"rules\" list is used to
                  match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".
                  \n - Exact: match a request only if it exactly matches a specified
                  rule. For example, if deployments can be modified via apps/v1, apps/v1beta1,
                  and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"],
                  apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to
                  apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
                  \n - Equivalent: match a request if modifies a resource listed in
                  rules, even via another API group or version. For example, if deployments
                  can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                  and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"],
                  resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1
                  would be converted to apps/v1 and sent to the webhook. \n Defaults
                  to \"Equivalent\""
                type: string
              namespaceSelector:
                description: "NamespaceSelector decides whether to run the webhook
                  on an object based on whether the namespace for that object matches
                  the selector. If the object itself is a namespace, the matching
                  is performed on object.metadata.labels. If the object is another
                  cluster scoped resource, it never skips the webhook. \n For example,
                  to run the webhook on any objects whose namespace is not associated
                  with \"runlevel\" of \"0\" or \"1\";  you will set the selector
                  as follows: \"namespaceSelector\": {   \"matchExpressions\": [     {
                  \      \"key\": \"runlevel\",       \"operator\": \"NotIn\",       \"values\":
                  [         \"0\",         \"1\"       ]     }   ] } \n If instead
                  you want to only run the webhook on any objects whose namespace
                  is associated with the \"environment\" of \"prod\" or \"staging\";
                  you will set the selector as follows: \"namespaceSelector\": {   \"matchExpressions\":
                  [     {       \"key\": \"environment\",       \"operator\": \"In\",
                  \      \"values\": [         \"prod\",         \"staging\"       ]
                  \    }   ] } \n See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                  for more examples of label selectors. \n Default to the empty LabelSelector,
                  which matches everything."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              objectSelector:
                description: ObjectSelector decides whether to run the webhook based
                  on if the object has matching labels. objectSelector is evaluated
                  against both the oldObject and newObject that would be sent to the
                  webhook, and is considered to match if either object matches the
                  selector. A null object (oldObject in the case of create, or newObject
                  in the case of delete) or an object that cannot have labels (like
                  a DeploymentRollback or a PodProxyOptions object) is not considered
                  to match. Use the object selector only if the webhook is opt-in,
                  because end users may skip the admission webhook by setting the
                  labels. Default to the empty LabelSelector, which matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              operations:
                description: Operations is the operations the admission hook cares
                  about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations
                  and any future admission operations that are added. If '*' is present,
                  the length of the slice must be one. Required.
                items:
                  type: string
                type: array
              resources:
                description: "Resources is a list of resources this rule applies to.
                  \n For example: 'pods' means pods. 'pods/log' means the log subresource
                  of pods. '*' means all resources, but not subresources. 'pods/*'
                  means all subresources of pods. '*/scale' means all scale subresources.
                  '*/*' means all resources and their subresources. \n If wildcard
                  is present, the validation rule will ensure resources do not overlap
                  with each other. \n Depending on the enclosing object, subresources
                  might not be allowed. Required."
                items:
                  type: string
                type: array
              scope:
                description: scope specifies the scope of this rule. Valid values
                  are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped
                  resources will match this rule. Namespace API objects are cluster-scoped.
                  "Namespaced" means that only namespaced resources will match this
                  rule. "*" means that there are no scope restrictions. Subresources
                  match the scope of their parent resource. Default is "*".
                type: string
              timeoutSeconds:
                description: TimeoutSeconds specifies the timeout for this webhook.
                  After the timeout passes, the webhook call will be ignored or the
                  API call will fail based on the failure policy. The timeout value
                  must be between 1 and 30 seconds. Default to 10 seconds.
                format: int32
                type: integer
              type:
                description: Type defines what kind of policy the object represents.
                  Valid values are Validating, Mutating and Controller. Defaults to
                  Validating.
                type: string
              violationPolicy:
                description: Violation policy describes how violations should be handled.
                  You can either specify deny (which is the default), warn or dry.
                type: string
            type: object
          status:
            properties:
              bundleHash:
                description: BundleHash is used to determine if we have to re-bundle
                  the javascript
                type: string
              message:
                description: Message describes the error in human readable language
                  if the webhook is in a failed state
                type: string
              phase:
                description: Phase describes how the syncing status of the webhook
                  is
                type: string
              reason:
                description: Reason holds the error in machine readable language if
                  the webhook is in a failed state
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: jspolicyviolations.policy.jspolicy.com
spec:
  group: policy.jspolicy.com
  names:
    kind: JsPolicyViolations
    listKind: JsPolicyViolationsList
    plural: jspolicyviolations
    singular: jspolicyviolations
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: JsPolicyViolations holds the webhook configuration
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            type: object
          status:
            properties:
              violations:
                description: Violations is an array of violations that were recorded
                  by the webhook
                items:
                  properties:
                    action:
                      description: Action holds the the action type the webhook reacted
                        with
                      type: string
                    code:
                      description: Code is the error code that was returned to the
                        client
                      format: int32
                      type: integer
                    message:
                      description: Message holds the message that was sent to the
                        client
                      type: string
                    reason:
                      description: Reason is the error reason that was returned to
                        the client
                      type: string
                    requestInfo:
                      description: The request this violation is about
                      properties:
                        apiVersion:
                          description: Kind is the type of object being submitted
                            (for example, Pod or Deployment)
                          type: string
                        kind:
                          description: Kind is the type of object being submitted
                            (for example, Pod or Deployment)
                          type: string
                        name:
                          description: Name is the name of the object as presented
                            in the request. On a CREATE operation, the client may
                            omit name and rely on the server to generate the name.
                            If that is the case, this field will contain an empty
                            string.
                          type: string
                        namespace:
                          description: Namespace is the namespace associated with
                            the request (if any).
                          type: string
                        operation:
                          description: Operation is the operation being performed.
                            This may be different than the operation requested. e.g.
                            a patch can result in either a CREATE or UPDATE Operation.
                          type: string
                      type: object
                    timestamp:
                      description: The timestamp when this violation has occurred
                      format: date-time
                      type: string
                    userInfo:
                      description: The user that sent the request
                      properties:
                        uid:
                          description: A unique value that identifies this user across
                            time. If this user is deleted and another user by the
                            same name is added, they will have different UIDs.
                          type: string
                        username:
                          description: The name that uniquely identifies this user
                            among all active users.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: jspolicybundles.policy.jspolicy.com
spec:
  group: policy.jspolicy.com
  names:
    kind: JsPolicyBundle
    listKind: JsPolicyBundleList
    plural: jspolicybundles
    singular: jspolicybundle
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: JsPolicyBundle holds the bundled payload
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bundle:
                description: Bundle holds the bundled payload (including dependencies
                  and minified javascript code)
                format: byte
                type: string
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

